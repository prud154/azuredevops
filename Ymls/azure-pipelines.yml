# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo $(Build.BuildId)
  displayName: 'Display The Build-ID'

- script: ls -al && pwd
  displayName: 'List Files & Current Working Directory'

- script: sudo apt update >> /dev/null 2>&1 && sudo apt install -y openjdk-8-jdk >> /dev/null 2>&1 && java -version
  displayName: 'Installing openjdk 8 and Check Java Version'

- script: ls -al && chmod 700 build.sh && sudo bash ./build.sh && ls -al
  displayName: 'Run the build script'

- script: ls -al && mv ROOT.war ROOT$(Build.BuildId).war && ls -al
  displayName: 'List Files & Rename ROOT.war'

- task: CopyFiles@2
  inputs:
    Contents: 'ROOT$(Build.BuildId).war'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true
  displayName: 'Copying WAR file to ArtifactStagingDirector'

- script: ls -al $(Build.ArtifactStagingDirectory)
  displayName: 'List Build Artifact Staging Folder'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'ROOT$(Build.BuildId).war'
    publishLocation: 'Container'
  displayName: 'Publishing WAR Artifact.'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'devopsb14-service-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload-batch --account-name devopsb14artifacts  --account-key $(STORAGE_ACCOUNT_KEY) --destination buildartifacts --source /home/vsts/work/1/a/'
  displayName: 'Upload artifacts to Azure Blob'

- task: S3Upload@1
  inputs:
    awsCredentials: 'devopsb14-aws-connection'
    regionName: 'us-east-1'
    bucketName: 'awsb26elblogs'
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    globExpressions: 'ROOT$(Build.BuildId).war'
  displayName: 'Upload artifacts to AWS S3'

- task: Docker@2
  inputs:
    containerRegistry: 'devopsb14-azureacr-connection'
    repository: 'devopsb14image'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'


- task: Docker@2
  inputs:
    containerRegistry: 'devopsb14-dockerhub-connection'
    repository: 'sreeharshav/devopsb14'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
  displayName: 'Creating & Pushing Docker Image To Docker HUB'

#Make sure below service connection has contributer access on the subscription.
#Also Change RG Name and Container name
- task: AzureCLI@2
  inputs:
    azureSubscription: 'devopsb14-service-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az container create -g devopsb14 --name devopsb14-$(Build.BuildId) --image sreeharshav/devopsb14:$(Build.BuildId) --cpu 1 --memory 1 --ports 8080 --dns-name-label devopsb14$(Build.BuildId) --location eastus'
